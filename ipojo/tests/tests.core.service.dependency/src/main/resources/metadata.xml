<ipojo>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.FooProviderType1"
		factory="FooProviderType-1" architecture="true">
		<provides />
	</component>
	
	<!--  Simple Dependencies -->
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="SimpleCheckServiceProvider" architecture="true">
		<requires field="fs" />
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="VoidCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="ObjectCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="RefCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="BothCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="DoubleCheckServiceProvider" architecture="true">
		<requires>
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<requires field="fs" />
		<provides />
	</component>

	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		factory="MObjectCheckServiceProvider" architecture="true">
		<requires>
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		factory="MRefCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		factory="MBothCheckServiceProvider" architecture="true">
		<requires>
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<!-- Simple & Optional Dependencies -->
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="SimpleOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" />
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="SimpleOptionalNoNullableCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" nullable="false" />
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="VoidOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="VoidOptionalNoNullableCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" nullable="false">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="ObjectOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="ObjectOptionalNoNullableCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" nullable="false">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="RefOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="RefOptionalNoNullableCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" nullable="false">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="BothOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="BothOptionalNoNullableCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" nullable="false">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		factory="MObjectOptionalCheckServiceProvider" architecture="true">
		<requires optional="true">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		factory="MRefOptionalCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			optional="true">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		factory="MBothOptionalCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			optional="true">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<!-- Simple & Optional Dependencies with default-implementation -->
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="DISimpleOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl" />
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="DIVoidOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="DIObjectOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="DIRefOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		factory="DIBothOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		factory="DIMObjectOptionalCheckServiceProvider" architecture="true">
		<requires optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		factory="DIMRefOptionalCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		factory="DIMBothOptionalCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<!--  Multiple Dependencies -->
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		factory="SimpleMultipleCheckServiceProvider" architecture="true">
		<requires field="fs" />
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		factory="VoidMultipleCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		factory="ObjectMultipleCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		factory="RefMultipleCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		factory="BothMultipleCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodMultipleCheckService"
		factory="MObjectMultipleCheckServiceProvider" architecture="true">
		<requires aggregate="true">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodMultipleCheckService"
		factory="MRefMultipleCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			aggregate="true">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodMultipleCheckService"
		factory="MBothMultipleCheckServiceProvider" architecture="true">
		<requires aggregate="true">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<!-- Multiple & Optional Dependencies -->
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		factory="SimpleOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true" />
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		factory="VoidOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		factory="ObjectOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		factory="RefOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodMultipleCheckService"
		factory="MObjectOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires aggregate="true" optional="true">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		className="org.apache.felix.ipojo.test.scenarios.component.MethodMultipleCheckService"
		factory="MRefOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			aggregate="true" optional="true">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	
</ipojo>
