<ipojo xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="org.apache.felix.ipojo http://people.apache.org/~clement/ipojo/schemas/core.xsd"
	xmlns="org.apache.felix.ipojo">
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.FooProviderType1"
		name="FooProviderType-1" architecture="true">
		<provides />
	</component>
	
	<!--  Simple Dependencies -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="SimpleCheckServiceProvider" architecture="true">
		<requires field="fs" />
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="VoidCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="ObjectCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="RefCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="BothCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="DoubleCheckServiceProvider" architecture="true">
		<requires>
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<requires field="fs" />
		<provides />
	</component>

	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		name="MObjectCheckServiceProvider" architecture="true">
		<requires>
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		name="MRefCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		name="MBothCheckServiceProvider" architecture="true">
		<requires>
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<!-- Simple & Optional Dependencies -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="SimpleOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" />
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="SimpleOptionalNoNullableCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" nullable="false" />
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="VoidOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="VoidOptionalNoNullableCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" nullable="false">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="ObjectOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="ObjectOptionalNoNullableCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" nullable="false">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="RefOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="RefOptionalNoNullableCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" nullable="false">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="BothOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="BothOptionalNoNullableCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" nullable="false">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		name="MObjectOptionalCheckServiceProvider" architecture="true">
		<requires optional="true">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		name="MRefOptionalCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			optional="true">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		name="MBothOptionalCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			optional="true">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<!-- Simple & Optional Dependencies with default-implementation -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="DISimpleOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl" />
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="DIVoidOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="DIObjectOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="DIRefOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CheckServiceProvider"
		name="DIBothOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		name="DIMObjectOptionalCheckServiceProvider" architecture="true">
		<requires optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		name="DIMRefOptionalCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodCheckServiceProvider"
		name="DIMBothOptionalCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			optional="true"
			default-implementation="org.apache.felix.ipojo.test.scenarios.component.FooServiceDefaultImpl">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<!--  Multiple Dependencies -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		name="SimpleMultipleCheckServiceProvider" architecture="true">
		<requires field="fs" />
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		name="VoidMultipleCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		name="ObjectMultipleCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		name="RefMultipleCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		name="BothMultipleCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodMultipleCheckService"
		name="MObjectMultipleCheckServiceProvider" architecture="true">
		<requires aggregate="true">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodMultipleCheckService"
		name="MRefMultipleCheckServiceProvider" architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			aggregate="true">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodMultipleCheckService"
		name="MBothMultipleCheckServiceProvider" architecture="true">
		<requires aggregate="true">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<!-- Multiple & Optional Dependencies -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		name="SimpleOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true" />
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		name="VoidOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		name="ObjectOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MultipleCheckService"
		name="RefOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodMultipleCheckService"
		name="MObjectOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires aggregate="true" optional="true">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.MethodMultipleCheckService"
		name="MRefOptionalMultipleCheckServiceProvider"
		architecture="true">
		<requires
			interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			aggregate="true" optional="true">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	
	<!-- Aggregate dependency as List -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.ListCheckService"
		name="SimpleListCheckServiceProvider" architecture="true">
		<requires field="fs" interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"/>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.ListCheckService"
		name="OptionalListCheckServiceProvider"
		architecture="true">
		<requires interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService" field="fs" optional="true" />
		<provides />
	</component>
	
		<!-- Aggregate dependency as Vector -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.VectorCheckService"
		name="SimpleVectorCheckServiceProvider" architecture="true">
		<requires field="fs">
			<callback type="bind" method="objectBind"/>
			<callback type="unbind" method="objectUnbind"/>
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.VectorCheckService"
		name="OptionalVectorCheckServiceProvider"
		architecture="true">
		<requires interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService" field="fs" optional="true" />
		<provides />
	</component>
	
	<!-- Aggregate dependency as Set -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.SetCheckService"
		name="SimpleSetCheckServiceProvider" architecture="true">
		<requires field="fs" interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"/>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.SetCheckService"
		name="OptionalSetCheckServiceProvider"
		architecture="true">
		<requires interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService" field="fs" optional="true" />
		<provides />
	</component>
	
	<!-- Aggregate dependency as Collection -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CollectionCheckService"
		name="SimpleCollectionCheckServiceProvider" architecture="true">
		<requires field="fs" interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"/>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.component.CollectionCheckService"
		name="OptionalCollectionCheckServiceProvider"
		architecture="true">
		<requires interface="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService" field="fs" optional="true" />
		<provides />
	</component>
	
</ipojo>
